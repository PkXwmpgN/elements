apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 23
        versionCode 1
        versionName "2.0"
    }

    sourceSets.main {
        jniLibs.srcDir 'src/main/libs'
        jni.srcDirs = []
        assets.srcDirs = ['src/main/assets', 'src/../../../../../../assets']
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn nativeBuild
}

clean.dependsOn 'nativeClean'

task nativeBuild(type: Exec) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def ndkbuild = properties.getProperty('ndk.dir', null) + "/ndk-build"
    commandLine ndkbuild,
            '-C', file('src/main/jni').absolutePath,
            '-j', Runtime.runtime.availableProcessors()
}

task nativeClean(type: Exec) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def ndkbuild = properties.getProperty('ndk.dir', null) + "/ndk-build"
    commandLine ndkbuild,
            '-C', file('src/main/jni').absolutePath,
            'clean'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}
